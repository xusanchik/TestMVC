@model TestMVC.Models.Task

@{
    ViewData["Title"] = "Edit";
}


<h1>Edit</h1>

<h4>Task</h4>
<hr />
@if (User.Identity != null && User.IsInRole("ADMIN"))
{
    

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
          
                <div class="form-group">
                    <label asp-for="EStatus" class="control-label"></label>
                    <select asp-for="EStatus" class="form-control">
                        <option value="">Select status</option>
                        <option value="0">Created</option>
                        <option value="1">In Progress</option>
                        <option value="2">Completed</option>
                    </select>
                    <span asp-validation-for="EStatus" class="text-danger"></span>
                </div>
                <div class="form-group">
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary my-2" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

}